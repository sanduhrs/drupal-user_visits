<?php

/**
 * @file
 * User visits - displays a list of users who recently visited any other user's
 * profile, along with the time of the last visit and the image.
 */

/**
 * Implements hook_help().
 */
function user_visits_help($path, $arg) {
  switch ($path) {
    case "admin/help#user-visits":
      return t("<p>Counts the visits to a user's profile.</p>");
  }
}

/**
 * Implements hook_menu().
 */
function user_visits_menu() {
  $items = array();
  $items['admin/config/people/user_visits'] = array(
    'title' => 'User visits',
    'description' => "Configure where to display a user's visitors.",
    'route_name' => 'user_visits.settings',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function user_visits_permission() {
  return array(
    'administer user visits' => array(
      'title' => t('Administer user visits'),
    ),
  );
}

/**
 * Implements of hook_user_view().
 */
function user_visits_user_view($account, $view_mode, $langcode) {
  $output = "";
  if (variable_get('user_visits_display', 0)) {
    $visitors = user_visits_latest($account->uid);
    if (is_array($visitors)) {
      foreach ($visitors as $visitor) {
        $user_account = user_load($visitor->vuid);
        $output .= theme('user_visits', array(
          'account' => $user_account,
          'timestamp' => $visitor->visit,
          'referer' => $visitor->referer,
        ));
      }
    }

    $account->content['summary']['user_visits'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('Latest visitors'),
      '#markup' => $output ? $output : t('No visits by now'),
      '#weight' => 10,
      '#attributes' => array('class' => 'user-visits'),
    );
  }
}

/**
 * Update counter.
 */
function user_visits_count($vuid, $uid) {
  $delete_query = db_delete('user_visits')
    ->condition('uid', $uid)
    ->condition('vuid', $vuid)
    ->execute();
  $query = db_insert('user_visits')
    ->fields(array(
      'uid' => $uid,
      'vuid' => $vuid,
      'visit' => REQUEST_TIME,
      'referer' => check_plain($_SERVER['HTTP_REFERER']),
    ))
    ->execute();
  return $query;
}

/**
 * Get the total of visits.
 */
function user_visits_total($uid) {
  $query = db_select('user_visits', 'uv');
  $query
      ->condition('uv.uid', $uid, '=')
      ->addExpression('COUNT(visit)', 'count');
  return $query->execute()->fetchField();
}

/**
 * Get the latest visits.
 */
function user_visits_latest($uid, $limit = 5) {
  $visitors = array();
  $query = db_select('user_visits', 'uv')
      ->fields('uv')
      ->condition('uv.uid', $uid)
      ->orderBy('uv.visit', 'DESC')
      ->range(0, $limit);
  $results = $query->execute();
  foreach ($results as $record) {
    $visitors[] = $record;
  }
  return $visitors;
}

/**
 * Implements of hook_theme().
 */
function user_visits_theme($existing, $type, $theme, $path) {
  return array(
    'user_visits' => array(
      'variables' => array(
        'account'   => NULL,
        'timestamp' => NULL,
        'referer'   => NULL,
      ),
    ),
    'user_visits_total' => array(
      'variables' => array(
        'total'   => NULL,
      ),
    ),
  );
}

/**
 * Themeable function.
 */
function theme_user_visits($account, $timestamp = NULL, $referer = NULL) {
  $output  = '<div>' . "\n";
  $output .= theme('user_picture', $account);
  $output .= ' <div class="name">' . theme('username', $account) . '</div>' . "\n";
  if ($account['timestamp']) {
    $output .= $account['timestamp'] ? ' <div class="visit">' . t('!time ago', array('!time' => format_interval(REQUEST_TIME - $account['timestamp']))) . '</div>' . "\n" : '';
    $output .= $account['referer'] ? ' <div class="referer">' . t('Referer !link', array('!link' => l($account['referer'], $account['referer']))) . '</div>' . "\n" : '';
  }
  $output .= '</div>' . "\n";
  return $output;
}

/**
 * Themeable function.
 */
function theme_user_visits_total($total = 0) {
  $output = '<div class="user_visits_total">' . t('Total visits !total', array('!total' => $total['total'])) . '</div>';
  return $output;
}
